#helm upgrade --install chartmuseum chartmuseum/chartmuseum --wait  --namespace=chartmuseum -f values.yaml --version 3.9.3 --dry-run > ../helmfile/helmfile-chartmuseum.yaml
#export POD_NAME=$(kubectl get pods --namespace chartmuseum -o jsonpath="{.items[0].metadata.name}")
#echo http://127.0.0.1:8080/
#kubectl port-forward $POD_NAME 8080:8080 --namespace chartmuseum

#Release "chartmuseum" has been upgraded. Happy Helming!
#NAME: chartmuseum
#LAST DEPLOYED: Sun Apr  2 21:28:08 2023
#NAMESPACE: chartmuseum
#STATUS: pending-upgrade
#REVISION: 6
#TEST SUITE: None
#HOOKS:
#MANIFEST:
#---
# Source: chartmuseum/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: chartmuseum
  labels:
    helm.sh/chart: chartmuseum-3.9.3
    app.kubernetes.io/name: chartmuseum
    app.kubernetes.io/instance: chartmuseum
    app.kubernetes.io/version: "0.15.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
---
# Source: chartmuseum/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: chartmuseum
  labels:
    helm.sh/chart: chartmuseum-3.9.3
    app.kubernetes.io/name: chartmuseum
    app.kubernetes.io/instance: chartmuseum
    app.kubernetes.io/version: "0.15.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    name: http
    protocol: TCP
    
  selector:
    app.kubernetes.io/name: chartmuseum
    app.kubernetes.io/instance: chartmuseum
---
# Source: chartmuseum/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chartmuseum
  labels:
    helm.sh/chart: chartmuseum-3.9.3
    app.kubernetes.io/name: chartmuseum
    app.kubernetes.io/instance: chartmuseum
    app.kubernetes.io/version: "0.15.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: chartmuseum
      app.kubernetes.io/instance: chartmuseum
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        app.kubernetes.io/name: chartmuseum
        app.kubernetes.io/instance: chartmuseum
    spec:
      securityContext:
        fsGroup: 1000      
      containers:
      - name: chartmuseum
        image: chartmuseum/chartmuseum:v0.12.0
        imagePullPolicy: IfNotPresent
        securityContext:
          {}
        env:
        - name: "CHART_POST_FORM_FIELD_NAME"
          value: "chart"
        - name: "DISABLE_API"
          value: "true"
        - name: "DISABLE_METRICS"
          value: "true"
        - name: "LOG_JSON"
          value: "true"
        - name: "PROV_POST_FORM_FIELD_NAME"
          value: "prov"
        - name: "STORAGE"
          value: "local"
        args:
        - --port=8080
        - --storage-local-rootdir=/storage
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /storage
          name: storage-volume
      serviceAccountName: default
      automountServiceAccountToken: false
      volumes:
      - name: storage-volume
        emptyDir: {}
---
# Source: chartmuseum/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chartmuseum
  annotations:
    cert-manager.io/acme-challenge-type: http01
    cert-manager.io/cluster-issuer: letsencrypt-production
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  labels:
    helm.sh/chart: chartmuseum-3.9.3
    app.kubernetes.io/name: chartmuseum
    app.kubernetes.io/instance: chartmuseum
    app.kubernetes.io/version: "0.15.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
  - host: chartmuseum.172.31.71.218.nip.io
    http:
      paths:
      - path: "/"
        backend:
          service:
            name: chartmuseum
            port:
              number: 8080
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - chartmuseum.172.31.71.218.nip.io
    secretName: chartmuseum.172.31.71.218.nip.io

#Get the ChartMuseum URL by running:

#  export POD_NAME=$(kubectl get pods --namespace chartmuseum -l "app=chartmuseum" -l "release=chartmuseum" -o jsonpath="{.items[0].metadata.name}")
#  echo http://127.0.0.1:8080/
#  kubectl port-forward $POD_NAME 8080:8080 --namespace chartmuseum
